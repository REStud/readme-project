{\rtf1\ansi\ansicpg1252\cocoartf2708
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fmodern\fcharset0 Courier;\f2\fswiss\fcharset0 Helvetica-Oblique;
}
{\colortbl;\red255\green255\blue255;\red139\green102\blue6;\red0\green0\blue0;\red139\green102\blue6;
}
{\*\expandedcolortbl;;\csgenericrgb\c54510\c40000\c2353;\cssrgb\c0\c0\c0;\csgenericrgb\c54510\c40000\c2353;
}
\margl1440\margr1440\vieww30040\viewh16060\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Replication Package for Figures 1 - 32 in\
\'93Market Power and Price Informativeness\'94\
Marcin Kacperczyk, Jaromir Nosal, Savitar Sundaresan, Review of Economic Studies 2023\
\
The code was run on MacBook M1 Pro with operating system MacOS Ventura 13.2.1. Software Used:\
\
Absoft Pro Fortran 22.0.3 with IMSL  Fortran Numerical Library 2018.0.0\
	Used to solve for policy functions for learning and trading\
Matlab (R) 2023a\
	Uses Fortran-generated output files to generate figures and (optionally) simulate the model to generate summary stats.\
\
The codes provided need the user specific path for the Fortran executable, described below as 
\f1 \cf2 \'94(Fortran code path)\'94
\f0 \cf0 .\
\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
\
Replication of Figure 1.\
\
\pard\pardeftab720\partightenfactor0
\cf3 \expnd0\expndtw0\kerning0
	To replicate Figure 1 of the paper one needs to use Factset institutional ownership data, available from the WRDS platform. The data report quarterly information on holdings of individual equity by global institutional investors. In the data, we are able to classify institutional owners based on their country domicile. We distinguish 9 major countries with data available from 2000 until 2017. These include United States, Australia, Canada, China, Germany, France, United Kingdom, Hong Kong, and Japan. \
\'a0\
	To reproduce panel A of Figure 1, we calculate average institutional ownership of each company per year/quarter using information from Factset on number of shares institutions hold and the number of shares outstanding. The ratio of the two numbers represents institutional ownership of each company. Subsequently, we average the number across all stocks. In excel sheet `Ownership\'92 we report the average (equal-weighted) ownership across all stocks per year quarter as well as the number of firms that are used to average the number. The data are presented on a country-by-country basis. In the sheet `Panel A\'92 we show the graphical presentation of the averages for each country in our sample.\
\'a0\
\pard\pardeftab720\sa320\partightenfactor0
\cf3 	To reproduce panel B of Figure 1, we use the Investment Company Institute (ICI) Fact Book that reports active and passive ownership statistics for U.S. investors. In the excel sheet `active passive us\'92 we show the data from ICI for the subgroups of investors and then separate the values into active and passive shares. We present the yearly values of passive ownership in excel sheet `Panel B\'92.\
	To reproduce panel C of Figure 1, we collect information on equity ownership of top-5 largest institutional owners of each country we presented in panel A. This information is presented in excel sheet `Top 5\'92, left-hand side of the sheet. Next, we normalize the top-5 ownership relative to the total institutional ownership in excel sheet `Ownership\'92. The right-hand side of the sheet reports the rescaled values for each country. The normalized values are presented in excel sheet `Panel C\'92.\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \kerning1\expnd0\expndtw0 	The data is provided in the excel file 
\f1 Figure1.xlsx
\f0  in folder 
\f1 Data
\f0 .\
\pard\pardeftab720\partightenfactor0
\cf0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
\
Replication of Figures 2 - 4 (run time less than 1s).\
\
	There are two ways to generate the figures:	\
\
 	A:  Run the file 
\f1 MaindriverMonopoly.m
\f0 . It performs the following tasks:\
\
		1. It sets parameters, then calls on the Fortran executable in 
\f1 \cf4 !(Fortran code path)/KNS_Monopoly/KNS_Monopoly. 
\f0 \cf3 It then calls \cf0 output_save\cf3 .m to save the output from this part in the folder 
\f1 size_Mon
\f0  defined by the variable 
\f1 folder
\f0  in 
\f1 \cf0 Maindrivermonopoly.m.\cf4 		
\f0 \cf0 \
		\cf3 2. \cf0 Then, the code runs 
\f1 output_gen_Mon.m
\f0  file to generate the figures
\f1 . 
\f0 The code accesses the
\f1  
\f0 folder
\f1  \cf3 size_Mon 
\f0 and uses files there to generate the figures. The figures are then saved in pdf format in folder 
\f1 figures/Benchmark_Mon, 
\f0 which is defined by the variable 
\f1 folder_figs
\f0  in 
\f1 \cf0 Maindrivermonopoly.m. 
\f0 \
\
	B:  The second way to generate the figures is to just run step 2 from A above, conditional on having the Fortran solution already. To do this, just run the file 
\f1 Mon_figures.m
\f0 .
\f1  
\f0 It uses the existing Fortran solution from folder 
\f1 \cf3 size_Mon 
\f0 and generates the figures.
\f1 \cf0 \
\

\f0 	After A or B is executed, the figures folder contains the pdfs of figures 2-4.\
\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
\
Replication of Figures 5 - 12 in the main text and 29 - 32 in the Appendix (run time of each experiment less than 5min, for total of less than 20min).\
\
	There are two ways to generate the figures:\
\
 	A:  Run the file 
\f1 MaindriverBenchmark.m
\f0 , with the variable 
\f1 option
\f0  in the code set to:\
\
		
\f1 1
\f0  for the size experiment\
		
\f1 2
\f0  for the concentration experiment\
		
\f1 3
\f0  for the passive/active experiment\
		
\f1 4
\f0  for the combined experiment\
\
		The variable 
\f1 option
\f0  sets the relevant size distribution parameters and the solution files folder to 
\f1 size_Bench
\f0 , 
\f1 conc_Bench
\f0 , 
\f1 pa_Bench
\f0  or 
\f1 combined_Bench
\f0 , depending on the selected experiment.\
\
		Once the variable 
\f1 option
\f0  is specified, running the code performs the following tasks:\
\
		1. It sets parameters, then calls on the Fortran executable in 
\f1 \cf2 !(Fortran code path)/KNS_Benchmark/KNS_Benchmark. 
\f0 \cf3 It then calls \cf0 output_save\cf3 .m to save the output from this part in the relevant solution folder defined by the variable 
\f1 folder
\f0  in 
\f1 \cf0 MaindriverBenchmark.m.\cf2 		
\f0 \cf0 \
		\cf3 2. \cf0 Then, the code runs 
\f1 output_gen_Bench.m
\f0  file to generate the figures
\f1 . 
\f0 The code accesses the relevant solution folder
\f1  
\f0 \cf3 and uses files there to generate the figures. The figures are saved in pdf format in folder 
\f1 figures/Benchmark, 
\f0 which is defined by the variable 
\f1 folder_figs
\f0  in 
\f1 \cf0 MaindriverBenchmark.m. 
\f0 \
\
	B:  The second way to generate the figures is to just run step 2 from A above, conditional on having the Fortran solution already. To do this, just run the file 
\f1 Bench_figures.m
\f0 , with the variable 
\f1 option
\f0  selected as above.
\f1  
\f0 It uses the existing Fortran solution from the folder applicable to the selected experiment
\f1 \cf3  
\f0 and generates the figures.
\f1 \cf0 \
\

\f0 	After A or B is executed for all values of the variable 
\f1 option
\f0  (1-4), the figures folder 
\f1 \cf3 figures/Benchmark 
\f0 \cf0 contains the pdfs of figures 5-12 from the main text and figures 29-32 from the Appendix.\
\
	In order to simulate the model and generate ownership and market return prediction, set the variable 
\f1 simulate
\f0  to 1 and run option A above. That will simulate the model for the baseline values of the size distribution. 
\f2\i Note that the code execution will pause after the simulation
\f0\i0 .\
\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
\
Replication of Figures 13 - 15 in the main text (run time less than 1 second for each experiment).\
\
	There are two ways to generate the figures:\
\
	A:  Run the file 
\f1 MaindriverExo.m
\f0 , with the variable 
\f1 option
\f0  in the code set to:\
\
		
\f1 1
\f0  for the size experiment\
		
\f1 2
\f0  for the concentration experiment\
		
\f1 3
\f0  for the passive/active experiment\
\
		The variable 
\f1 option
\f0  sets the relevant size distribution parameters and the solution files folder to 
\f1 size_Exo and size_Exo2 
\f0 , 
\f1 conc_Exo
\f0 , 
\f1 conc_Exo2, pa_Exo, pa_Exo2
\f0 , depending on the selected experiment. \
\
		Once the variable 
\f1 option
\f0  is specified, running the code performs the following tasks:\
\
		1. It sets parameters, calls on the Fortran executable in 
\f1 \cf2 !(Fortran code path)/KNS_Exo/KNS_Exo. 
\f0 \cf3 It then calls \cf0 output_save\cf3 .m to save the output from this part in the relevant solution folder defined by the variable 
\f1 folder
\f0  in 
\f1 \cf0 MaindriverExo.m.\cf2 		
\f0 \cf0 \
		\cf3 2. \cf0 Then, the code runs 
\f1 output_gen_Exo.m
\f0  file to generate the figures
\f1 . 
\f0 The code accesses the relevant solution folder
\f1  
\f0 \cf3 and uses files there to generate the figures. The figures are saved in pdf format in folder 
\f1 figures/Exo, 
\f0 as defined by the variable 
\f1 folder_figs
\f0  in 
\f1 \cf0 MaindriverExo.m. 
\f0 \
\
	B:  The second way to generate the figures is to just run step 2 from A above, conditional on having the Fortran solution already. To do this, just run the file 
\f1 Exo_figures.m
\f0 , with the variable 
\f1 option
\f0  selected as above.
\f1  
\f0 It uses the existing Fortran solution from the folder applicable to the selected experiment
\f1 \cf3  
\f0 and generates the figures.
\f1 \cf0 \
\

\f0 	After A or B is executed for all values of the variable 
\f1 option
\f0  (1-3), the figures folder 
\f1 \cf3 figures/Exo 
\f0 \cf0 contains the 3 pdf of figures 13-15.\
\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
\
Replication of Figures 16 - 17 in the Appendix (run time of each experiment less than 10min, for total of less than 30min).\
\
	There are two ways to generate the figures:\
\
	A:  Run the file 
\f1 MaindriverDARA.m
\f0 , with the variable 
\f1 option
\f0  in the code set to:\
\
		
\f1 1
\f0  for the size experiment\
		
\f1 2
\f0  for the concentration experiment\
		
\f1 3
\f0  for the passive/active experiment\
		\
		The variable 
\f1 option
\f0  sets the relevant size distribution parameters and the solution files folder to 
\f1 size_DARA, size_DARA2 
\f0 , 
\f1 conc_DARA
\f0 , 
\f1 conc_DARA2, pa_DARA, pa_DARA2
\f0 , depending on the selected experiment. Each experiment will solve two versions of the model, with 
\f1 s=0.2
\f0  and 
\f1 s=2
\f0 . The 
\f1 s=0.2 
\f0 experiments solution are saved in the 
\f1 _DARA
\f0  folders, the 
\f1 s=2
\f0  experiments are saved in the 
\f1 _DARA2
\f0  folders.\
\
		Once the variable 
\f1 option
\f0  is specified, running the code performs the following tasks:\
\
		1. It sets parameters, calls on the Fortran executable in 
\f1 \cf2 !(Fortran code path)/KNS_Benchmark/KNS_Benchmark. 
\f0 \cf3 It calls \cf0 output_save\cf3 .m to save the output from this part in the relevant solution folder defined by the variable 
\f1 folder
\f0  in 
\f1 \cf0 MaindriverDARA.m.\cf2 		
\f0 \cf0 \
		\cf3 2. \cf0 Then, the code runs 
\f1 output_gen_Bench.m
\f0  file to generate the figures
\f1 . 
\f0 The code accesses the relevant solution folder
\f1  
\f0 \cf3 and uses these files to generate the figures. The figures are saved in pdf format in folder 
\f1 figures/DARA 
\f0 for the
\f1  s=0.2 
\f0 case
\f1  
\f0 and
\f1  figures/DARA2 
\f0 for the 
\f1 s=2
\f0  case
\f1 , 
\f0 as defined by the variable 
\f1 folder_figs
\f0  in 
\f1 \cf0 MaindriverDARA.m. 
\f0 \
\
	B:  The second way to generate the figures is to just run step 2 from A above, conditional on having the Fortran solution already. To do this, just run the file 
\f1 DARA_figures.m
\f0 , with the variable 
\f1 option
\f0  selected as above.
\f1  
\f0 It uses the existing Fortran solution from the folder applicable to the selected experiment
\f1 \cf3  
\f0 and generates the figures.
\f1 \cf0 \
\

\f0 	After A or B is executed for all values of the variable 
\f1 option
\f0  (1-3), the figures folder 
\f1 \cf3 figures/DARA 
\f0 \cf0 contains the 3 pdf panels of figure 16 and  folder 
\f1 \cf3 figures/DARA2 
\f0 \cf0 contains the 3 pdf panels of figure 17 from the  Appendix.\
\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
\
Replication of Figure 18 in the Appendix (run time of each experiment less than 5min, for total of less than 15min)\
\
	There are two ways to generate the figures:\
\
	A:  Run the file 
\f1 MaindriverEntropy.m
\f0 , with the variable 
\f1 option
\f0  in the code set to:\
\
		
\f1 1
\f0  for the size experiment\
		
\f1 2
\f0  for the concentration experiment\
		
\f1 3
\f0  for the passive/active experiment\
		\
		The variable 
\f1 option
\f0  sets the relevant size distribution parameters and the solution files folder to 
\f1 size_Ent 
\f0 , 
\f1 conc_Ent, pa_Ent
\f0 , depending on the selected experiment. \
\
		Once the variable 
\f1 option
\f0  is specified, running the code performs the following tasks:\
\
		1. It sets parameters, calls on the Fortran executable in 
\f1 \cf2 !(Fortran code path)/KNS_Entropy/KNS_Entropy. 
\f0 \cf3 It calls \cf0 output_save\cf3 .m to save the output from this part in the relevant solution folder defined by the variable 
\f1 folder
\f0  in 
\f1 \cf0 MaindriverEntropy.m.\cf2 		
\f0 \cf0 \
		\cf3 2. \cf0 Then, the code runs 
\f1 output_gen_Bench.m
\f0  file to generate the figures
\f1 . 
\f0 The code accesses the relevant solution folder
\f1  
\f0 \cf3 and uses these files to generate the figures. The figures are saved in pdf format in folder 
\f1 figures/Entropy, 
\f0 as defined by the variable 
\f1 folder_figs
\f0  in 
\f1 \cf0 MaindriverEntropy.m. 
\f0 \
\
	B:  The second way to generate the figures is to just run step 2 from A above, conditional on having the Fortran solution already. To do this, just run the file 
\f1 Entropy_figures.m
\f0 , with the variable 
\f1 option
\f0  selected as above.
\f1  
\f0 It uses the existing Fortran solution from the folder applicable to the selected experiment
\f1 \cf3  
\f0 and generates the figures.
\f1 \cf0 \
\

\f0 	After A or B is executed for all values of the variable 
\f1 option
\f0  (1-3), the figures folder 
\f1 \cf3 figures/Entropy 
\f0 \cf0 contains the 3 pdf panels of figure 18  from the  Appendix.\
\
	In order to simulate the model and generate ownership and market return prediction, set the variable 
\f1 simulate
\f0  to 1 and run option A above. That will simulate the model for the baseline values of the size distribution. 
\f2\i Note that the code execution will pause after the simulation
\f0\i0 .\
\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
\
Replication of Figures 19-21 in the Appendix  (run time of each experiment approximately 83h, for total of about 10 days)\
\
There are two ways to generate the figures:\
\
	A:  Run the file 
\f1 Maindriver_K.m, 
\f0 with the variable 
\f1 option
\f0  in the code set to:\
\
		
\f1 1
\f0  for the size experiment\
		
\f1 2
\f0  for the concentration experiment\
		
\f1 3
\f0  for the passive/active experiment\
\
	            Running the code performs the following tasks:\
\
		1. It sets parameters, calls on the Fortran executable in 
\f1 \cf2 !(Fortran code path)/KNS_Benchmark/KNS_Benchmark. 
\f0 \cf3 It calls \cf0 output_save_K\cf3 .m to save the output from this part in the relevant solution folder defined by the variable 
\f1 folder
\f0  in 
\f1 \cf0 Maindriver_K.m.\cf2 		
\f0 \cf0 \
		\cf3 2. \cf0 Then, the code runs 
\f1 output_gen_K.m
\f0  file to generate the figures
\f1 . 
\f0 The code accesses the relevant solution folder
\f1  
\f0 and runs optimization over the K choices, and then \cf3 and uses the solution files to generate the figures. The figures are saved in pdf format in folder 
\f1 figures/Endo_K, 
\f0 as defined by the variable 
\f1 folder_figs
\f0  in 
\f1 \cf0 Maindriver_K.m. 
\f0 \
\
	B:  The second way to generate the figures is to just run step 2 from A above, conditional on having the Fortran solution already. To do this, just run the file 
\f1 Endo_figures.m
\f0 .
\f1  
\f0 It uses the existing Fortran solution from the applicable folders \cf3 and generates the figures. This option saves most of the run time at takes about 15min per experiment, for a 45 min total.
\f1 \cf0 \
\

\f0 	After A or B is executed, the figures folder 
\f1 \cf3 figures/Endo_K,
\f0  contains the 12 pdf files for the 12 panels of Figures 19-21.\cf0 \
\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
\
Replication of Figures 22-25 in the Appendix (run time of each of the 8 cases is 15 minutes for a total of about 2 hours).\
\
There are two ways to generate the figures:\
\
	A:  Run the file 
\f1 MaindriverRobust.m
\f0 \
\
	            Running the code performs the following tasks:\
\
		1. It sets parameters, calls on the Fortran executable in 
\f1 \cf2 !(Fortran code path)/KNS_Robust/KNS_Robust. 
\f0 \cf3 It calls \cf0 output_save\cf3 .m to save the output from this part in the relevant solution folder defined by the variable 
\f1 folder
\f0  in 
\f1 \cf0 MaindriverRobust.m. 
\f0 Since there are 8 robustness exercises, these folders have the naming convention size_RbX, pa_RbX, conc_RbX, where X ranges from 1 to 8.
\f1 \cf2 		
\f0 \cf0 \
		\cf3 2. \cf0 Then, the code runs 
\f1 output_gen_Bench.m
\f0  file to generate the figures
\f1 . 
\f0 The code accesses the relevant solution folder
\f1  
\f0 \cf3 and uses these files to generate the figures. The figures are saved in pdf format in folder 
\f1 figures/RobustX, 
\f0 as defined by the variable 
\f1 folder_figs
\f0  in 
\f1 \cf0 MaindriverRobust.m. 
\f0 As for solutions, in the figures folders names, X ranges from 1 to 8.\
\
	B:  The second way to generate the figures is to just run step 2 from A above, conditional on having the Fortran solution already. To do this, just run the file 
\f1 Robust_figures.m
\f0 .
\f1  
\f0 It uses the existing Fortran solution from the applicable folders \cf3 and generates the figures.
\f1 \cf0 \
\

\f0 	After A or B is executed, the figures folder 
\f1 \cf3 figures/RobustX, 
\f0 where 
\f1 X
\f0  ranges from 1 to 8, contains the figure files.
\f1  
\f0 \cf0 Specifically, folders Robust1 and Robust2 contain the 6 panels of Figure 22. Folders Robust3 and Robust4 contain the 6 panels of Figure 23. Folders Robust5 and Robust6 contain the 6 panels of Figure 24. Folders Robust7 and Robust8 contain the 6 panels of Figure 25.\
\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
\
Replication of Figure 26 in the Appendix (run time of about 5 minutes per experiment, 15 minutes total).\
\
There are two ways to generate the figures:\
\
	A:  Run the file 
\f1 MaindriverPassive.m, 
\f0 with the variable 
\f1 option
\f0  in the code set to:\
\
		
\f1 1
\f0  for the size experiment\
		
\f1 2
\f0  for the concentration experiment\
		
\f1 3
\f0  for the passive/active experiment\
\
	            Running the code performs the following tasks:\
\
		1. It sets parameters, calls on the Fortran executable in 
\f1 \cf2 !(Fortran code path)/KNS_Passive/KNS_Passive. 
\f0 \cf3 It calls \cf0 output_save\cf3 .m to save the output from this part in the relevant solution folder defined by the variable 
\f1 folder
\f0  in 
\f1 \cf0 MaindriverPassive.m.\cf2 		
\f0 \cf0 \
		\cf3 2. \cf0 Then, the code runs 
\f1 output_gen_Pass.m
\f0  file to generate the figures
\f1 . 
\f0 The code accesses the relevant solution folder
\f1  
\f0 \cf3 and uses these files to generate the figures. The figures are saved in pdf format in folder 
\f1 figures/Passive, 
\f0 as defined by the variable 
\f1 folder_figs
\f0  in 
\f1 \cf0 MaindriverPassive.m. 
\f0 \
\
	B:  The second way to generate the figures is to just run step 2 from A above, conditional on having the Fortran solution already. To do this, just run the file 
\f1 Passive_figures.m
\f0 .
\f1  
\f0 It uses the existing Fortran solution from the applicable folders \cf3 and generates the figures.
\f1 \cf0 \
\

\f0 	After A or B is executed, the figures folder 
\f1 \cf3 figures/Passive,
\f0  contains the pdf figures for the 3 panels of Figure 26.\cf0 \
\
	In order to simulate the model and generate ownership and market return prediction, set the variable 
\f1 simulate
\f0  to 1 and run option A above. That will simulate the model for the baseline values of the size distribution. 
\f2\i Note that the code execution will pause after the simulation
\f0\i0 .\
\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
\
Replication of Figure 27-28 in the Appendix (run time of each experiment approximately 130min, for total of 13h).\
\
There are two ways to generate the figures:\
\
	A:  Run the file 
\f1 MaindriverRetail.m, 
\f0 with the variable 
\f1 option
\f0  in the code set to:\
\
		
\f1 1
\f0  for the size experiment\
		
\f1 2
\f0  for the concentration experiment\
		
\f1 3
\f0  for the passive/active experiment\
\
	            Running the code performs the following tasks:\
\
		1. It sets parameters, calls on the Fortran executable in 
\f1 \cf2 !(Fortran code path)/KNS_Retail/KNS_Retail. 
\f0 \cf3 It calls \cf0 output_save\cf3 .m to save the output from this part in the relevant solution folder defined by the variable 
\f1 folder
\f0  in 
\f1 \cf0 MaindriverRetail.m.\cf2 		
\f0 \cf0 \
		\cf3 2. \cf0 Then, the code runs 
\f1 output_gen_Retail.m
\f0  file to generate the figures
\f1 . 
\f0 The code accesses the relevant solution folder
\f1  
\f0 \cf3 and uses these files to generate the figures. The figures are saved in pdf format in folder 
\f1 figures/Retail1
\f0  and 
\f1 figures/Retail2, 
\f0 as defined by the variable 
\f1 folder_figs
\f0  in 
\f1 \cf0 MaindriverRetail.m. 
\f0 \
\
	B:  The second way to generate the figures is to just run step 2 from A above, conditional on having the Fortran solution already. To do this, just run the file 
\f1 Retail_figures.m
\f0 .
\f1  
\f0 It uses the existing Fortran solution from the applicable folders \cf3 and generates the figures.
\f1 \cf0 \
\

\f0 	After A or B is executed, the figures folders 
\f1 \cf3 figures/Retail1
\f0  and 
\f1 figures/Retail2,
\f0  contain the pdf figures for the 3 panels of Figures 27 and 28, respectively.\
\
\cf0 	In order to simulate the model and generate ownership and market return prediction, set the variable 
\f1 simulate
\f0  to 1 and run option A above. That will simulate the model for the baseline values of the size distribution. 
\f2\i Note that the code execution will pause after the simulation
\f0\i0 .\
\
\
\
\
\
\
}